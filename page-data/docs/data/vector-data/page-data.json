{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/docs/data/vector-data",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"foam_template\": {\n    \"name\": \"Data\",\n    \"filepath\": \"docs/data/vector-data.md\"\n  },\n  \"tags\": [\"data\", \"ADDTAGS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Vector data\"), mdx(\"p\", null, \"#TODO\"), mdx(\"h2\", null, \"Checklist: remove when finished\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Description of the data source\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Why is it relevant?\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Examples\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Reproducible examples and how to start using it\", mdx(\"div\", {\n    parentName: \"li\",\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"- [ ] Link to the data source\")))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Documentation sources\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"References\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#vector-data","title":"Vector data","items":[{"url":"#checklist-remove-when-finished","title":"Checklist: remove when finished"}]}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"-   [[zonal-statistics]] use [[vector-data]] to aggregate [[population-data]]. ","referrer":{"parent":{"id":"490c8919-cc45-5a9a-b92f-79eb504d8215","fields":{"slug":"/docs/index","title":"Overview"}}}},{"contextLine":"-  [[vector-data]]","referrer":{"parent":{"id":"61742585-2983-5fe1-9567-73502ff7e82a","fields":{"slug":"/docs/data/data","title":"Data"}}}},{"contextLine":"Is an aggregate to remote sensing data (often raster data) by a [[vector-data]] polygon, such as a country or administrative region. It is often used to summarize the characteristics of a region based on remote sensing data.","referrer":{"parent":{"id":"358ac38a-ffde-5850-bb61-c9a99ce011e6","fields":{"slug":"/docs/methods/zonal-statistics","title":"Zonal statistics"}}}},{"contextLine":"[[population-data]], such as [[global-human-settlement]], can be used to calculate zonal statistics for population density, land cover, or other demographic characteristics at the [[vector-data]] level.","referrer":{"parent":{"id":"358ac38a-ffde-5850-bb61-c9a99ce011e6","fields":{"slug":"/docs/methods/zonal-statistics","title":"Zonal statistics"}}}}]},"fields":{"slug":"/docs/data/vector-data","title":"Vector data"}}},"pageContext":{"id":"d089429e-0b4b-5152-a0b1-45caccedd328","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}